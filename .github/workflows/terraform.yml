name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to trigger (plan, apply or forceunlock)'
        required: true
        default: 'plan'
      lockid:
        description: 'Lock ID to release'
        required: false
        default: ''
  push:
    branches:
      - main
    paths: 
      - '**/*.tf'
      - '**/*.tfvars'
  pull_request:
    paths:
      - '**/*.tf'
      - '**/*.tfvars'

env:
  TF_VERSION: '0.12.28'
  GITHUB_EVENT_NAME: ${{ github.event_name }}
  GITHUB_EVENT_INPUTS_ACTION: ${{ github.event.inputs.action }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  KEYVAULT_NAME: ${{ secrets.KEYVAULT_NAME }}

jobs:
  # Plan and Apply job
  planapply:
    name: Plan/apply
    if: github.event.inputs.action != 'forceunlock'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.1
    
    - uses: matt-FFFFFF/AzOpsTFRun@rolling-main
      name: AzOpsTFRun
      
  
  # This job removes the state lock (ID supplied as an input) on the backend
  forceunlock:
    name: Force unlock
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'forceunlock'
    
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.1
    
    - uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - uses: Azure/get-keyvault-secrets@v1.0
      with:
        keyvault: ${{ secrets.KEYVAULT_NAME }}
        secrets: 'arm-client-id, arm-client-secret, arm-subscription-id, arm-tenant-id,tf-backend-file'
      id: kvsecrets

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.1.0
      with:
        terraform_version: '0.12.28'

    - name: Create backend.hcl
      run: |
        cat << EOF >backend.hcl
        ${{ steps.kvsecrets.outputs.tf-backend-file }}
        EOF

    - name: Terraform Init
      run: |
        ln -s ../backend.hcl
        terraform init -backend-config=backend.hcl
      env:
        ARM_CLIENT_ID: ${{ steps.kvsecrets.outputs.arm-client-id }}
        ARM_CLIENT_SECRET: ${{ steps.kvsecrets.outputs.arm-client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ steps.kvsecrets.outputs.arm-subscription-id }}
        ARM_TENANT_ID: ${{ steps.kvsecrets.outputs.arm-tenant-id }}
      working-directory: tf-management
      
    - name: Force unlock
      run: terraform force-unlock -force ${{ github.event.inputs.lockid }}
      env:
        ARM_CLIENT_ID: ${{ steps.kvsecrets.outputs.arm-client-id }}
        ARM_CLIENT_SECRET: ${{ steps.kvsecrets.outputs.arm-client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ steps.kvsecrets.outputs.arm-subscription-id }}
        ARM_TENANT_ID: ${{ steps.kvsecrets.outputs.arm-tenant-id }}
      working-directory: tf-management

       
